{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red196\green26\blue22;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 ## Put comments here that give an overall description of what your\cf0 \
\cf2 ## functions do "caching the inverse of a Matrix\cf0 \
\
\cf2 ## Write a short comment describing this function "set the value of the matrix\cf0 \
\
makeCacheMatrix <- function(x = matrix()) \{\
    m <- NULL\
    set <- function(y) \{\
        x <<- y\
        m <<- NULL\
    \}\
    get <- function () x\
    setinverse <- function(solve) m <<- solve\
    getinverse <- function () m\
    list(set = set, get = get,\
         setinverse =setinverse,\
         getinverse =getinverse)\
\
\}\
\
\
\cf2 ## Write a short comment describing this function\cf0 \
\
cacheSolve <- function(x, ...) \{\
    m <- x$getinverse()\
    if(!is.null(m)) \{\
        message(\cf3 "getting cached data"\cf0 )\
        return (m)\
    \}\
    data <- x$get()\
    m <- solve(data, ...)\
    x$setinverse(m)\
    m\
        \cf2 ## Return a matrix that is the inverse of 'x'\cf0 \
\}}